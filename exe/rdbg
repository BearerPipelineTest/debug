#!/usr/bin/env ruby

require_relative '../lib/debug/config'
config = DEBUGGER__.parse_argv(ARGV)

case config[:mode]
when :start
  require 'rbconfig'

  if config[:remote]
    start_mode = "debug/open"
  else
    start_mode = "debug/run"
  end

  ::DEBUGGER__.config_to_env(config)

  cmd = config[:command] ? ARGV.shift : RbConfig.ruby
  exec({'RUBYOPT' => "-I#{File.expand_path(File.dirname(__dir__))}/lib -r #{start_mode}"},
       cmd, *ARGV)

when :attach
  require_relative "../lib/debug/client"

  config.each{|k, v|
    DEBUGGER__::CONFIG[k] = v
  }

  begin
    if ARGV.empty? && config[:port]
      connect [config[:host], config[:port]].compact
    else
      connect ARGV
    end
  rescue DEBUGGER__::CommandLineOptionError
    puts opt.help
  end
else
  raise # assert
end
